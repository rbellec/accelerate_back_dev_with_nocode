version: "3"

services:
  traefik:
    image: "traefik"
    restart: always
    command:
      - "--api=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # To configure certificates.
      - "--providers.file.directory=/configuration/"
      - "--providers.file.watch=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/traefik/:/configuration
      - /var/run/docker.sock:/var/run/docker.sock:ro

  n8n:
    image: n8nio/n8n
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.n8n.tls=true
      # - traefik.http.routers.n8n.tls=false
      - traefik.http.routers.n8n.entrypoints=web,websecure
      # - traefik.http.routers.n8n.entrypoints=web
      # - traefik.http.routers.n8n.tls.certresolver=mytlschallenge
      # - traefik.http.middlewares.n8n.headers.SSLRedirect=true
      # - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
      # - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
      # - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
      # - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
      # - traefik.http.middlewares.n8n.headers.SSLHost=${DOMAIN_NAME}
      # - traefik.http.middlewares.n8n.headers.Host=${DOMAIN_NAME}
      # - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
      # - traefik.http.middlewares.n8n.headers.STSPreload=true
      # - traefik.http.routers.n8n.middlewares=n8n@docker
    env_file:
      - config/n8n.docker.env
      - config/.n8n.docker.secret.env
    volumes:  
      - ./data/n8n:/home/node/.n8n
      - ./data/n8n_local_files:/files

  rabbitmq:
    image: rabbitmq:3-management-alpine
    # container_name: 'rabbitmq'
    hostname: rabbitmq.local
    tty: true
    stdin_open: true
    ports:
      # rabbitmq port
      - 5672:5672
      # Management console port (remove once routed by traefik)
      # - 15672:15672
    volumes:
      - ./data/rabbitmq_data:/var/lib/rabbitmq/
      - ./log/rabbitmq:/var/log/rabbitmq
    labels:
      - traefik.enable=true
      - traefik.http.routers.rabbitmq.rule=Host(`rabbitmq.${DOMAIN_NAME}`)
      # - traefik.http.routers.rabbitmq.tls=true
      - traefik.http.routers.rabbitmq.tls=false
      # - traefik.http.routers.rabbitmq.entrypoints=web,websecure
      - traefik.http.routers.rabbitmq.entrypoints=web
      # - traefik.http.routers.rabbitmq.tls.certresolver=mytlschallenge
      # - traefik.http.routers.n8n.middlewares=n8n@docker
      - traefik.http.services.rabbitmq.loadbalancer.server.port=15672

